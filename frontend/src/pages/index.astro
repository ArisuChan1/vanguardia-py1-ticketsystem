---
import SectionContainer from "../components/SectionContainer.astro";
import TicketCard from "../components/TicketCard.astro";
import Layout from "../layouts/Layout.astro";
import type Ticket from "../types/ticket";

// Importante: Asegúrate de haber definido la interfaz Ticket antes de usar este código

// Función para generar una fecha aleatoria en los últimos 30 días
function randomDate() {
  const today = new Date();
  const pastDate = new Date(
    today.getTime() - Math.random() * 30 * 24 * 60 * 60 * 1000
  );
  return pastDate;
}

// Array para almacenar los tickets
const tickets: Ticket[] = [];

// Crear 10 tickets de ejemplo
for (let i = 1; i <= 100; i++) {
  const randomUser = ["Miguel", "Juan", "Pedro", "Luis", "Ana"][
    Math.floor(Math.random() * 5)
  ];

  const randomAssignedUser = ["Alicia", "María", "Sofía", "Lucía", "Carlos"][
    Math.floor(Math.random() * 5)
  ];

  const randomPriority = ["low", "medium", "high"][
    Math.floor(Math.random() * 3)
  ] as "low" | "medium" | "high";
  const randomStatus = ["open", "in_progress", "resolved"][
    Math.floor(Math.random() * 3)
  ] as "open" | "in_progress" | "resolved";
  const ticket: Ticket = {
    id: i,
    title: `Ticket ${i}`,
    principalImage: `https://source.unsplash.com/200x100?ticket,${i}`,
    description: `Descripción detallada del Ticket ${i} de ejemplo. Este ticket fue creado por ${randomUser} y asignado a ${randomAssignedUser}. El estado del ticket es ${randomStatus} y tiene prioridad ${randomPriority}.`,
    priority: randomPriority,
    status: randomStatus,
    createdBy: randomUser,
    assignedTo: randomAssignedUser,
    createdAt: randomDate(),
    updatedAt: randomDate(),
    images: [
      `https://source.unsplash.com/400x300/?ticket,${i}`,
      `https://source.unsplash.com/400x300/?ticket,${i + 1}`,
      `https://source.unsplash.com/400x300/?ticket,${i + 2}`,
    ],
  };
  tickets.push(ticket);
}
---

<Layout title="Bienvenido a Ticket Assistant">
  <main class="px-4">
    <SectionContainer class="py-16">
      <h1 class="text-4xl font-bold text-center">
        Bienvenido a Ticket Assistant
      </h1>
      <p class="mt-4 text-center">
        Una aplicación para la gestión de tickets de soporte
      </p>
    </SectionContainer>
    <SectionContainer>
      <!-- Lista de Tickets y Botón de Crear un Ticket -->
      <div class="flex justify-between items-center">
        <h2 class="text-2xl font-bold">Tickets</h2>
        <a
          href="/tickets/new"
          class="relative inline-flex items-center justify-center p-0.5 mb-2 me-2 overflow-hidden text-sm font-medium text-gray-900 rounded-lg group bg-gradient-to-br from-purple-600 to-blue-500 group-hover:from-purple-600 group-hover:to-blue-500 hover:text-white dark:text-white focus:ring-4 focus:outline-none focus:ring-blue-300 dark:focus:ring-blue-800"
        >
          <span
            class="relative px-5 py-2.5 transition-all ease-in duration-75 bg-white dark:bg-gray-900 rounded-md group-hover:bg-opacity-0"
          >
            Crear Ticket
          </span>
        </a>
      </div>
    </SectionContainer>

    <SectionContainer class="py-8">
      <div
        class="grid grid-flow-row grid-cols-1 gap-4 max-md:grid-cols-1 lg:grid-cols-3"
      >
        <!-- TicketCard -->
        {
          tickets.map((t) => {
            return (
              <a href="">
                <TicketCard ticket={t} />
              </a>
            );
          })
        }
      </div>
    </SectionContainer>
  </main>
</Layout>
